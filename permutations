package mycodes;
import java.util.*;

public class UniquePermutations {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        System.out.print("Enter a non-negative integer: ");
        double n = s.nextDouble();
        if (n < 0 || n != (int) n) {
            System.out.println("Invalid input. Please enter a non-negative integer.");
        } else {
            int num = (int) n;
            System.out.println("Given Number: " + num + "\nPermutations are:");
            Set<String> p = new HashSet<>();
            generatePermutations(Integer.toString(num).toCharArray(), 0, p);
            p.forEach(System.out::println);
        }
        s.close();
    }
    public static void generatePermutations(char[] arr, int index, Set<String> permutations) {
        if (index == arr.length) {
            permutations.add(new String(arr));
            return;
        }
        for (int i = index; i < arr.length; i++) {
            swap(arr, index, i);
            generatePermutations(arr, index + 1, permutations);
            swap(arr, index, i);
        }
    }
    public static void swap(char[] arr, int i, int j) {
        char temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
}

