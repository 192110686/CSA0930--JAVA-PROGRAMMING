import java.util.Random;

public class ThreadJoinSleepDemo {

    public static void main(String[] args) {
        Thread t1 = new Thread(new MyThread("Thread 1"));
        Thread t2 = new Thread(new MyThread("Thread 2"));

        t1.start();
        t2.start();
    }
}

class MyThread implements Runnable {
    private String name;
    private Random random;

    public MyThread(String name) {
        this.name = name;
        this.random = new Random();
    }

    @Override
    public void run() {
        try {
            int randomNumber = getRandomNumber();
            System.out.println(name + " generated number: " + randomNumber);

            if (randomNumber % 2 == 0) {
                if (name.equals("Thread 1")) {
                    System.out.println("Thread 1 joining Thread 2");
                    Thread.currentThread().join(); // Thread 1 joins Thread 2
                } else {
                    System.out.println("Thread 2 sleeping for 5000 milliseconds");
                    Thread.sleep(5000); // Thread 2 sleeps for 5000 milliseconds
                }
            }
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }

    private int getRandomNumber() {
        return random.nextInt(100);
    }
}
