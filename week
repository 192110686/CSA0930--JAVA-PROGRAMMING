package mycodes;
import java.util.Scanner;
import java.util.Calendar;
import java.util.GregorianCalendar;
public class Week {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        System.out.print("Enter the number of days: ");
        int d = 0;
        if (s.hasNextInt()) {
            d = s.nextInt();
            if (d >= 0) {
                int y = d / 365;
                int w = (d % 365) / 7;
                int r = (d % 365) % 7;
                System.out.println("Years: " + y);
                System.out.println("Weeks: " + w);
                System.out.println("Days: " + r);
            } else {
                System.out.println("Enter a non-negative number of days.");
            }
        } else {
            System.out.println("Invalid input. Please enter an integer number of days.");
            s.next(); 
        }
        System.out.print("\nEnter the date (day month year): ");
        int day = 0, month = 0, year = 0;

        if (s.hasNextInt()) {
            day = s.nextInt();
        } else {
            System.out.println("Invalid input. Please enter an integer for the day.");
            s.next(); 
        }

        if (s.hasNextInt()) {
            month = s.nextInt();
            if (month < 1 || month > 12) {
                System.out.println("Invalid month. Please enter a value between 1 and 12.");
                return;
            }
        } else {
            System.out.println("Invalid input. Please enter an integer for the month.");
            s.next(); 
        }

        if (s.hasNextInt()) {
            year = s.nextInt();

            if (year < 1) {
                System.out.println("Invalid year. Please enter a positive value for the year.");
                return;
            }

            if (day < 1 || day > getMaxDaysInMonth(month, year)) {
                System.out.println("Invalid day. Please enter a valid day for the given month and year.");
                return;
            }

            String dow = findDayOfWeek(day, month, year);
            System.out.println("Day of the week: " + dow);
        } else {
            System.out.println("Invalid input. Please enter an integer for the year.");
            s.next(); 
        }

        s.close();
    }

    public static String findDayOfWeek(int d, int m, int y) {
        String[] dow = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};

        Calendar c = new GregorianCalendar(y, m - 1, d); 
        int idx = c.get(Calendar.DAY_OF_WEEK);
        return dow[idx - 1];
    }

    public static int getMaxDaysInMonth(int m, int y) {
        switch (m) {
            case 1:  
            case 3:  
            case 5:  
            case 7:  
            case 8:  
            case 10: 
            case 12: 
                return 31;
            case 4:  
            case 6:  
            case 9:  
            case 11: 
                return 30;
            case 2:  
                if (isLeapYear(y)) {
                    return 29;
                } else {
                    return 28;
                }
            default:
                return -1; 
        }
    }
    public static boolean isLeapYear(int y) {
        return (y % 4 == 0 && y % 100 != 0) || (y % 400 == 0);
    }
}
